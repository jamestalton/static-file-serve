name: build

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
    schedule:
        - cron: '0 16 * * 1'

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup Node
              uses: actions/setup-node@v1
              with:
                  node-version: 12.x
                  registry-url: https://registry.npmjs.org

            - name: Setup Git
              run: |
                  git config --global user.name "${GITHUB_ACTOR}"
                  git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

            - name: Update Dependencies
              if: github.event_name == 'schedule'
              run: |
                  rm -rf package-lock.json node_modules
                  npx npm-check-updates -u
                  npm install
                  npm audit fix
                  git add -u :/
                  set +e
                  git commit -m "update dependencies"
                  echo "SKIP=$?" >> $GITHUB_ENV

            - name: Update Version
              if: github.event_name != 'pull_request' && env.SKIP != '1'
              run: |
                  npm version patch
                  NAME=`cat package.json | jq -r .name`
                  VERSION=v`cat package.json | jq -r .version`
                  echo "VERSION=${VERSION}" >> $GITHUB_ENV
                  echo "NAME=${NAME}" >> $GITHUB_ENV

            - name: Install Dependencies
              if: env.SKIP != '1'
              run: npm ci

            # - name: Test
            #   if: env.SKIP != '1'
            #   run: npm test

            - name: Build
              if: env.SKIP != '1'
              run: npm run build

            - name: Tag
              if: github.event_name != 'pull_request' && env.SKIP != '1'
              run: |
                  git push
                  git push origin $VERSION

            - name: Publish
              if: github.event_name != 'pull_request' && env.SKIP != '1'
              run: npm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Set up Docker Buildx
              if: github.event_name != 'pull_request' && env.SKIP != '1'
              id: buildx
              uses: crazy-max/ghaction-docker-buildx@v3.3.0

            - name: Login to DockerHub
              if: github.event_name != 'pull_request' && env.SKIP != '1'
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}

            - name: Enable Docker Content Trust
              if: github.event_name != 'pull_request' && env.SKIP != '1'
              run: echo "DOCKER_CONTENT_TRUST=1" >> $GITHUB_ENV

            - name: Docker Build
              if: github.event_name != 'pull_request' && env.SKIP != '1'
              run: |
                  docker buildx build \
                      --output "type=image,push=true" \
                      --platform linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
                      --build-arg VERSION=${{ env.VERSION }} \
                      --tag ${{ secrets.DOCKER_USERNAME }}/${{ env.NAME }}:${{ env.VERSION }} \
                      --tag ${{ secrets.DOCKER_USERNAME }}/${{ env.NAME }}:latest \
                      .
